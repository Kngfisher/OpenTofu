include:
  - component: $CI_SERVER_FQDN/$CI_PROJECT_PATH/apply@$CI_COMMIT_SHA
    inputs:
      image_registry_base: $GITLAB_OPENTOFU_IMAGE_BASE
      version: $CI_COMMIT_SHA
      base_os: $GITLAB_OPENTOFU_BASE_IMAGE_OS
      opentofu_version: $OPENTOFU_VERSION
      stage: test
      root_dir: $TEST_GITLAB_TOFU_ROOT_DIR
      state_name: $TEST_GITLAB_TOFU_STATE_NAME
      no_plan: true
      auto_encryption: true
      auto_encryption_passphrase: '947F23E4-B9FC-4E76-B7B4-1D35ECBE9B09'

  # For CI Terraform state cleanup
  - component: $CI_SERVER_FQDN/$CI_PROJECT_PATH/delete-state@$CI_COMMIT_SHA
    inputs:
      state_name: $TEST_GITLAB_TOFU_STATE_NAME
      rules: [{when: always}]

stages: [test, verify, cleanup]

state-is-encrypted:
  stage: verify
  image: $GITLAB_OPENTOFU_IMAGE_BASE/gitlab-opentofu:$CI_COMMIT_SHA-opentofu$OPENTOFU_VERSION-alpine
  variables:
    GITLAB_TOFU_STATE_NAME: $TEST_GITLAB_TOFU_STATE_NAME
  script:
    - |
      . $(which gitlab-tofu)
      echo "Requesting state at $TF_HTTP_ADDRESS to check if it is encrypted ..."
      success=$(curl --fail-with-body -u "${TF_HTTP_USERNAME}:${TF_HTTP_PASSWORD}" "${TF_HTTP_ADDRESS}" | jq -r '.encrypted_data != ""')
      if [ "$success" != 'true' ]; then
        echo 'Error: no encrypted data found in state.'
        exit 1
      else
        echo 'Success: the state is encrypted.'
      fi
  rules: [{when: on_success}]
